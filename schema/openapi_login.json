{"openapi":"3.1.0","info":{"title":"Invariant Login","summary":"Invariant home page and login service","version":"0.1.0"},"servers":[{"url":"https://invariant.test"}],"paths":{"/api/v1/github-webhook":{"post":{"tags":["webhooks"],"summary":"Receive a signed webhook message from Github","operationId":"github_webhook_recv_api_v1_github_webhook_post","responses":{"204":{"description":"Successful Response"},"422":{"description":"Unprocessable Entity","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidationErrorResponse"}}}},"403":{"description":"Forbidden","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseErrorResponse"}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseErrorResponse"}}}}}}},"/api/v1/client-login":{"post":{"tags":["client-login"],"summary":"Create a client login flow token.","operationId":"init_client_login_api_v1_client_login_post","responses":{"201":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateClientLoginSessionResponse"}}}},"422":{"description":"Unprocessable Entity","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidationErrorResponse"}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseErrorResponse"}}}}}}},"/api/v1/fulfill_client_login":{"post":{"tags":["client-login"],"summary":"Fullfil a client login session.","description":"Resolve a client login session to a specific access token + org using a refresh token.","operationId":"fulfill_client_login_api_v1_fulfill_client_login_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/FulfillClientLoginRequest"}}},"required":true},"responses":{"204":{"description":"Client login session completed."},"422":{"description":"Unprocessable Entity","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidationErrorResponse"}}}},"401":{"description":"Unauthorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ChallengeResponse"}}}},"403":{"description":"Forbidden","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseErrorResponse"}}}},"404":{"description":"Not Found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseErrorResponse"}}}}},"security":[{"JwtRefreshCookie":[]}]}},"/api/v1/client-login-consume":{"post":{"tags":["client-login"],"summary":"Consume a client login flow token.","operationId":"consume_client_login_api_v1_client_login_consume_post","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ConsumeClientLoginSessionResponse"}}}},"422":{"description":"Unprocessable Entity","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidationErrorResponse"}}}},"404":{"description":"Not Found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseErrorResponse"}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseErrorResponse"}}}}},"security":[{"JwtAccessBearer":[]}]}},"/api/v1/login/":{"post":{"tags":["login"],"summary":"Authenticate and respond to authentication challenges","description":"To authenticate, send a request with basic_auth provided.\n\nIf additional steps are neded by the user, this API will send a ChallengeResponse (HTTP 401),\nwhich includes a challenge type and a Login Session Token. Use this API to respond to the challenge\nand send the given token.\n\nOn successful authentication an HTTPOnly refresh token cookie will be issued through a set-cookie header.\n\nNote: this is not the only authentication entrypoint. It is also possible to authenticate from a\nsingle-use email invitation link using the /check_invite method.\n\n## Using the cookie\n\nThe HTTPOnly refresh token cookie can be used to:\n\n-   Get a list of available instances: /get_instances.\n-   Get an instance access token: /:org/api/v1/refresh.\n-   Refresh the refresh token before it expires: /refresh.\n\n## Basic authentication\n\n    Key: basic_auth\n    Authentication: none\n\nProvide an email and password value. If the password is incorrect a ChallengeResponse will be issued with\nchallenge=basic_auth.\n\n## Email verification\n\n    Key: email_valid\n    Authentication: Login Session Token\n\nProvide a secret PIN value from the verification email. The PIN must be non-expired and is consumed on use.\n/resend_validation_pin can be used to re-send a verification email.\n\n## Password reset\n\n    Key: reset_request\n    Authentication: none\n\nProvide an email to send a password reset email to it. A ChallengeResponse will be issued with\nchallenge=reset_pin .\n\n## Password reset check PIN\n\n    Key: reset_pin_request\n    Authentication: Login Session Token\n\nProvide a secret PIN value from the password reset email. The PIN must be non-expired. Checking the PIN\ndoes not consume it, it will be re-checked and consumed when the user provides a new password. A\nChallengeResponse will be issued with challenge=new_password .\n\n## New password\n\n    Key: new_password\n    Authentication: Login Session Token\n\nProvide a new password and a secret PIN value from the password reset email OR an email invitation token (which is a JWT\ncontaining a secret PIN). The PIN must be non-expired and will be consumed on use.","operationId":"init_login_api_v1_login__post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LoginRequest"}}},"required":true},"responses":{"204":{"description":"Authentication Complete, Cookie Issued"},"422":{"description":"Unprocessable Entity","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidationErrorResponse"}}}},"401":{"description":"Unauthorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ChallengeResponse"}}}},"404":{"description":"Not Found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseErrorResponse"}}}}},"security":[{"JwtAccessBearer":[]}]}},"/api/v1/login/exists":{"post":{"tags":["login"],"summary":"Test if an active login exists for the given email","description":"Tests if an active login exists for the given email.","operationId":"active_login_exists_for_email_api_v1_login_exists_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/EmailCheckRequest"}}},"required":true},"responses":{"204":{"description":"Login Found"},"422":{"description":"Unprocessable Entity","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidationErrorResponse"}}}},"404":{"description":"Not Found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseErrorResponse"}}}}}}},"/api/v1/login/check_invite":{"post":{"tags":["login"],"summary":"Consume an email invitation magic link","description":"Consume an email invitation magic link.\n\nIf the email is already associated with an active login, this will\nlink the new user and active login and issue an HTTPOnly refresh token cookie.\n\nOtherwise, a ChallengeResponse will be issued with next=new_password.\n\nThis function can also handle the case where the login was created with a pre-set password,\nalthough creating such a login may not be supported.\n\nThis function also marks the linked login as email_validated=True.","operationId":"check_invite_api_v1_login_check_invite_post","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CheckInviteResponse"}}}},"422":{"description":"Unprocessable Entity","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidationErrorResponse"}}}},"401":{"description":"Unauthorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ChallengeResponse"}}}},"403":{"description":"Forbidden","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseErrorResponse"}}}},"404":{"description":"Not Found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseErrorResponse"}}}}},"security":[{"JwtAccessBearer":[]}]}},"/api/v1/login/refresh":{"post":{"tags":["login"],"summary":"Issue a refresh token from a valid, non-expired refresh token","description":"Issue a refresh token from a valid, non-expired refresh token.","operationId":"refresh_api_v1_login_refresh_post","responses":{"204":{"description":"Successful Response"},"422":{"description":"Unprocessable Entity","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidationErrorResponse"}}}},"401":{"description":"Unauthorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ChallengeResponse"}}}}},"security":[{"JwtRefreshCookie":[]}]}},"/api/v1/login/get_instances":{"post":{"tags":["login"],"summary":"List instances available to the current login","description":"List instances where this login is associated with an active user.","operationId":"get_instances_api_v1_login_get_instances_post","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/User"},"type":"array","title":"Response Get Instances Api V1 Login Get Instances Post"}}}},"422":{"description":"Unprocessable Entity","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidationErrorResponse"}}}},"401":{"description":"Unauthorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ChallengeResponse"}}}}},"security":[{"JwtRefreshCookie":[]}]}},"/api/v1/login/register":{"post":{"tags":["login"],"summary":"Register a new organization","operationId":"register_api_v1_login_register_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/RegisterOrganizationRequestBody"}}},"required":true},"responses":{"204":{"description":"Successful Response"},"422":{"description":"Unprocessable Entity","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidationErrorResponse"}}}},"403":{"description":"Forbidden","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseErrorResponse"}}}},"409":{"description":"Conflict","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseErrorResponse"}}}},"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseErrorResponse"}}}}}}},"/api/v1/login/resend_validation_pin":{"post":{"tags":["login"],"summary":"Resend a validation PIN","operationId":"resend_validation_pin_api_v1_login_resend_validation_pin_post","responses":{"204":{"description":"Successful Response"},"422":{"description":"Unprocessable Entity","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidationErrorResponse"}}}},"401":{"description":"Unauthorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ChallengeResponse"}}}},"404":{"description":"Not Found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseErrorResponse"}}}}},"security":[{"JwtAccessBearer":[]}]}},"/api/v1/login/version":{"get":{"tags":["login"],"summary":"Return the current server version.","operationId":"get_version_api_v1_login_version_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GetVersionResponse"}}}},"422":{"description":"Unprocessable Entity","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidationErrorResponse"}}}}}}},"/{urlpath}":{"get":{"tags":["static"],"summary":"Static files (catch-all)","operationId":"static__urlpath__get","parameters":[{"name":"urlpath","in":"path","required":true,"schema":{"type":"string","title":"Urlpath"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ValidationErrorResponse"}}},"description":"Unprocessable Entity"}}}}},"components":{"schemas":{"BaseErrorResponse":{"properties":{"status":{"type":"integer","title":"Status"},"type":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Type"},"title":{"type":"string","title":"Title"},"detail":{"type":"string","title":"Detail"},"instance":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Instance"}},"type":"object","required":["status","type","title","detail"],"title":"BaseErrorResponse","description":"Based on RFC7807 - see BaseResponse."},"ChallengeResponse":{"properties":{"status":{"type":"integer","title":"Status"},"type":{"const":"urn:invariant:errors:auth_challenge","title":"Type"},"title":{"type":"string","title":"Title"},"detail":{"type":"string","title":"Detail"},"instance":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Instance"},"challenge":{"type":"string","enum":["basic_auth","validate_email","reset_pin","new_password"],"title":"Challenge"},"login_token":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Login Token"}},"type":"object","required":["status","type","title","detail","challenge"],"title":"ChallengeResponse"},"CheckInviteResponse":{"properties":{"status":{"type":"integer","title":"Status"},"type":{"const":"urn:invariant:responses:check_invite_response","title":"Type","default":"urn:invariant:responses:check_invite_response"},"location":{"type":"string","title":"Location"}},"type":"object","required":["status","location"],"title":"CheckInviteResponse"},"ConsumeClientLoginSessionResponse":{"properties":{"status":{"type":"integer","title":"Status"},"type":{"const":"urn:invariant:responses:consume_client_login_response","title":"Type","default":"urn:invariant:responses:consume_client_login_response"},"retry_after":{"type":"integer","title":"Retry After"},"access_token":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Access Token"},"org_name":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Org Name"}},"type":"object","required":["status","retry_after","access_token","org_name"],"title":"ConsumeClientLoginSessionResponse"},"CreateClientLoginSessionResponse":{"properties":{"status":{"type":"integer","title":"Status"},"type":{"const":"urn:invariant:responses:init_client_login_response","title":"Type","default":"urn:invariant:responses:init_client_login_response"},"pin":{"type":"string","title":"Pin"},"url":{"type":"string","title":"Url"},"uuid":{"type":"string","title":"Uuid"},"token":{"type":"string","title":"Token"}},"type":"object","required":["status","pin","url","uuid","token"],"title":"CreateClientLoginSessionResponse"},"EmailCheckRequest":{"properties":{"email":{"type":"string","format":"email","title":"Email"}},"type":"object","required":["email"],"title":"EmailCheckRequest"},"EmailPasswordLogin":{"properties":{"email":{"type":"string","format":"email","title":"Email"},"password":{"type":"string","format":"password","title":"Password","writeOnly":true}},"type":"object","required":["email","password"],"title":"EmailPasswordLogin"},"FulfillClientLoginRequest":{"properties":{"organization_name":{"type":"string","title":"Organization Name"},"pin":{"type":"string","format":"password","title":"Pin","writeOnly":true}},"type":"object","required":["organization_name","pin"],"title":"FulfillClientLoginRequest"},"GetVersionResponse":{"properties":{"version":{"type":"string","title":"Version"}},"type":"object","required":["version"],"title":"GetVersionResponse"},"Login":{"properties":{"uuid":{"type":"string","format":"uuid","title":"Uuid"},"email":{"type":"string","format":"email","title":"Email"}},"type":"object","required":["uuid","email"],"title":"Login"},"LoginRequest":{"properties":{"basic_auth":{"anyOf":[{"$ref":"#/components/schemas/EmailPasswordLogin"},{"type":"null"}]},"email_valid":{"anyOf":[{"$ref":"#/components/schemas/ValidationRequest"},{"type":"null"}]},"reset_request":{"anyOf":[{"$ref":"#/components/schemas/ResetRequest"},{"type":"null"}]},"reset_pin_request":{"anyOf":[{"$ref":"#/components/schemas/ResetPINRequest"},{"type":"null"}]},"new_password":{"anyOf":[{"$ref":"#/components/schemas/NewPasswordRequest"},{"type":"null"}]}},"type":"object","title":"LoginRequest","description":"Request to determine login method (Basic, SAML, etc)."},"NewPasswordRequest":{"properties":{"email":{"anyOf":[{"type":"string","format":"email"},{"type":"null"}],"title":"Email"},"password":{"type":"string","format":"password","title":"Password","writeOnly":true},"authn_type":{"$ref":"#/components/schemas/NewPasswordRequestAuthnType"},"authn":{"type":"string","format":"password","title":"Authn","writeOnly":true}},"type":"object","required":["email","password","authn_type","authn"],"title":"NewPasswordRequest"},"NewPasswordRequestAuthnType":{"type":"string","enum":["PIN","TOKEN"],"title":"NewPasswordRequestAuthnType"},"Organization":{"properties":{"uuid":{"type":"string","format":"uuid","title":"Uuid"},"name":{"type":"string","title":"Name"},"description":{"type":"string","title":"Description"},"color":{"type":"string","title":"Color"},"icon":{"type":"string","title":"Icon"},"url":{"type":"string","title":"Url"}},"type":"object","required":["uuid","name","description","color","icon","url"],"title":"Organization"},"RegisterOrganizationRequestBody":{"properties":{"email":{"type":"string","format":"email","title":"Email"},"password":{"type":"string","title":"Password"}},"type":"object","required":["email","password"],"title":"RegisterOrganizationRequestBody","description":"Request body used to register a new organization."},"ResetPINRequest":{"properties":{"email":{"type":"string","format":"email","title":"Email"},"pin":{"type":"string","format":"password","title":"Pin","writeOnly":true}},"type":"object","required":["email","pin"],"title":"ResetPINRequest"},"ResetRequest":{"properties":{"email":{"type":"string","format":"email","title":"Email"}},"type":"object","required":["email"],"title":"ResetRequest"},"User":{"properties":{"uuid":{"type":"string","format":"uuid","title":"Uuid"},"organization":{"$ref":"#/components/schemas/Organization"},"login":{"$ref":"#/components/schemas/Login"},"email":{"type":"string","format":"email","title":"Email"},"is_active":{"type":"boolean","title":"Is Active"},"is_superuser":{"type":"boolean","title":"Is Superuser"}},"type":"object","required":["uuid","organization","login","email","is_active","is_superuser"],"title":"User"},"ValidationErrorResponse":{"properties":{"status":{"type":"integer","title":"Status"},"type":{"const":"urn:invariant:errors:validation","title":"Type"},"title":{"const":"There was a problem with your request.","title":"Title"},"detail":{"type":"string","title":"Detail"},"instance":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Instance"},"validations":{"items":{"$ref":"#/components/schemas/ValidationErrorResponsePart"},"type":"array","title":"Validations"}},"type":"object","required":["status","type","title","detail","validations"],"title":"ValidationErrorResponse"},"ValidationErrorResponsePart":{"properties":{"loc":{"items":{"type":"string"},"type":"array","title":"Loc"},"msg":{"type":"string","title":"Msg"},"type":{"type":"string","title":"Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationErrorResponsePart"},"ValidationRequest":{"properties":{"pin":{"type":"string","format":"password","title":"Pin","writeOnly":true}},"type":"object","required":["pin"],"title":"ValidationRequest"}},"securitySchemes":{"JwtRefreshCookie":{"type":"apiKey","in":"cookie","name":"refresh_token_cookie"},"JwtAccessBearer":{"type":"http","scheme":"bearer"}}}}